@model ERP.WebApi.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<div class="block-center mt-xl wd-xxl">
    <!-- START panel-->
    <div class="panel panel-dark panel-flat">
        <div class="panel-heading text-center">
            <a href="#">
                <img src="~/Content/Images/logo.png" alt="Image" class="block-center img-rounded" />
            </a>
        </div>
        <div class="panel-body">
            <p class="text-center pv">Register</p>
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "mb-lg", data_parsley_validate="", novalidate="", role = "form", enctype = "multipart/form-data" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group has-feedback">
                    @Html.LabelFor(x=>x.Email, new {@class = "text-muted"})
                    @Html.TextBoxFor(m => m.Email, new {@class = "form-control", placeholder = "Email", required="required"})
                    <span class="fa fa-envelope form-control-feedback text-muted"></span>
                    @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group has-feedback">
                    @Html.LabelFor(x => x.FirstName, new { @class = "text-muted" })
                    @Html.TextBoxFor(m => m.FirstName, new {@class = "form-control", placeholder = "First Name", required = "required" })
                    <span class="fa fa-user form-control-feedback text-muted"></span>
                    @Html.ValidationMessageFor(x => x.FirstName, "", new {@class = "text-danger"})
                    
                </div>

                <div class="form-group has-feedback">
                    @Html.LabelFor(x => x.LastName, new { @class = "text-muted" })
                    @Html.TextBoxFor(m => m.LastName, new {@class = "form-control", placeholder = "Last Name", required = "required" })
                    <span class="fa fa-user form-control-feedback text-muted"></span>
                    @Html.ValidationMessageFor(x => x.LastName, "", new {@class = "text-danger"})
                </div>

                <div class="form-group has-feedback">
                    @Html.LabelFor(x => x.Password, new { @class = "text-muted" })
                    @Html.PasswordFor(m => m.Password, new {@class = "form-control", placeholder = "Password", required = "required" })
                    <span class="fa fa-lock form-control-feedback text-muted"></span>
                    @Html.ValidationMessageFor(x => x.Password, "", new {@class = "text-danger"})
                </div>
                <div class="form-group has-feedback">
                    @Html.LabelFor(x => x.ConfirmPassword, new { @class = "text-muted" })
                    @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control", placeholder = "Confirm Password", required = "required" })
                    <span class="fa fa-lock form-control-feedback text-muted"></span>
                    @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new {@class = "text-danger"})
                </div>
            <button type="submit" class="btn btn-primary btn-block mt-lg">Create account</button>
            }
            <p class="pt-lg text-center">Already have an account?</p><a href="@Url.Action("Login")" class="btn btn-block btn-default">Login</a>
        </div>
    </div>
</div>
